/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.PublicSessionInput
import org.openapitools.client.models.Message
import org.openapitools.client.models.ModelInfoInput
import org.openapitools.client.models.PublicSessionFile
import org.openapitools.client.models.State
import org.openapitools.client.models.Usage

class PublicSessionInputTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PublicSessionInput
        //val modelInstance = PublicSessionInput()

        // to test the property `userId` - The user ID this session belongs to.
        should("test userId") {
            // uncomment below to test the property
            //modelInstance.userId shouldBe ("TODO")
        }

        // to test the property `orgId` - The organization ID this session belongs to.
        should("test orgId") {
            // uncomment below to test the property
            //modelInstance.orgId shouldBe ("TODO")
        }

        // to test the property `model` - Model configuration used in the session.
        should("test model") {
            // uncomment below to test the property
            //modelInstance.model shouldBe ("TODO")
        }

        // to test the property `ttl` - The time to live of the session in seconds.
        should("test ttl") {
            // uncomment below to test the property
            //modelInstance.ttl shouldBe ("TODO")
        }

        // to test the property `name` - Human readable session name.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `description` - A brief description to help users remember what the session is about.
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `id` - Session unique ramdom identifier.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `language` - The iso-code of the session language.
        should("test language") {
            // uncomment below to test the property
            //modelInstance.language shouldBe ("TODO")
        }

        // to test the property `turns` - The number of turns in the session.
        should("test turns") {
            // uncomment below to test the property
            //modelInstance.turns shouldBe ("TODO")
        }

        // to test the property `createTime` - The Unix timestamp (in seconds) of when the session was created.
        should("test createTime") {
            // uncomment below to test the property
            //modelInstance.createTime shouldBe ("TODO")
        }

        // to test the property `updateTime` - The Unix timestamp (in seconds) of when the session was last updated.
        should("test updateTime") {
            // uncomment below to test the property
            //modelInstance.updateTime shouldBe ("TODO")
        }

        // to test the property `numMessages` - The number of messages in the session.
        should("test numMessages") {
            // uncomment below to test the property
            //modelInstance.numMessages shouldBe ("TODO")
        }

        // to test the property `messages` - The list of messages comprising the session so far.
        should("test messages") {
            // uncomment below to test the property
            //modelInstance.messages shouldBe ("TODO")
        }

        // to test the property `usage` - Session usage statistics.
        should("test usage") {
            // uncomment below to test the property
            //modelInstance.usage shouldBe ("TODO")
        }

        // to test the property `canLog` - Whether the session can be logged or not.
        should("test canLog") {
            // uncomment below to test the property
            //modelInstance.canLog shouldBe ("TODO")
        }

        // to test the property `state` - The state the session belongs to.
        should("test state") {
            // uncomment below to test the property
            //modelInstance.state shouldBe ("TODO")
        }

        // to test the property `files` - The list of files uploaded to the session.
        should("test files") {
            // uncomment below to test the property
            //modelInstance.files shouldBe ("TODO")
        }

    }
}
