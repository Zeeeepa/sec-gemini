/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.MessageType
import org.openapitools.client.models.MimeType
import org.openapitools.client.models.Role
import org.openapitools.client.models.State
import org.openapitools.client.models.Usage

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Represents the content of the session both in request and response.
 *
 * @param messageType The type of message - Generation, Tool Call, or Info.
 * @param id A unique identifier for the message - uuid4 int.
 * @param parentId The ID of the parent message.
 * @param turn The turn identifier is used to group/message are part of the same conversation turn.
 * @param group The Group ID (UUID4) identify messages part of the same generation or action.
 * @param actor The actor of the message - user or agent.
 * @param role The role of the messages author.
 * @param timestamp The Unix timestamp (in seconds) of when the message was created.
 * @param messageSubType 
 * @param state The state the message belongs to.
 * @param content 
 * @param mimeType 
 * @param statusCode The status code of the message. 2xx is Okay, 4xx is a client error, 5xx is a server error.
 * @param statusMessage Explain status code reason.
 * @param usage 
 */


data class Message (

    /* The type of message - Generation, Tool Call, or Info. */
    @Json(name = "message_type")
    val messageType: MessageType,

    /* A unique identifier for the message - uuid4 int. */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* The ID of the parent message. */
    @Json(name = "parent_id")
    val parentId: kotlin.String? = "3713",

    /* The turn identifier is used to group/message are part of the same conversation turn. */
    @Json(name = "turn")
    val turn: kotlin.String? = null,

    /* The Group ID (UUID4) identify messages part of the same generation or action. */
    @Json(name = "group")
    val group: kotlin.String? = null,

    /* The actor of the message - user or agent. */
    @Json(name = "actor")
    val actor: kotlin.String? = "user",

    /* The role of the messages author. */
    @Json(name = "role")
    val role: Role? = null,

    /* The Unix timestamp (in seconds) of when the message was created. */
    @Json(name = "timestamp")
    val timestamp: kotlin.Int? = null,

    @Json(name = "message_sub_type")
    val messageSubType: kotlin.String? = null,

    /* The state the message belongs to. */
    @Json(name = "state")
    val state: State? = null,

    @Json(name = "content")
    val content: kotlin.String? = null,

    @Json(name = "mime_type")
    val mimeType: MimeType? = null,

    /* The status code of the message. 2xx is Okay, 4xx is a client error, 5xx is a server error. */
    @Json(name = "status_code")
    val statusCode: kotlin.Int? = 200,

    /* Explain status code reason. */
    @Json(name = "status_message")
    val statusMessage: kotlin.String? = "OK",

    @Json(name = "usage")
    val usage: Usage? = null

) {


}

