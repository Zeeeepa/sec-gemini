/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * Values: _200,_201,_202,_204,_206,_300,_301,_302,_303,_304,_307,_308,_400,_401,_4012,_402,_403,_404,_405,_406,_407,_408,_409,_4092,_410,_411,_412,_413,_414,_415,_416,_417,_418,_422,_425,_426,_428,_429,_4292,_431,_451,_500,_5002,_5003,_501,_502,_503,_504,_505,_506,_507,_508,_510,_511
 */

@JsonClass(generateAdapter = false)
enum class ResponseStatus(val value: kotlin.Int) {

    @Json(name = "200")
    _200(200),

    @Json(name = "201")
    _201(201),

    @Json(name = "202")
    _202(202),

    @Json(name = "204")
    _204(204),

    @Json(name = "206")
    _206(206),

    @Json(name = "300")
    _300(300),

    @Json(name = "301")
    _301(301),

    @Json(name = "302")
    _302(302),

    @Json(name = "303")
    _303(303),

    @Json(name = "304")
    _304(304),

    @Json(name = "307")
    _307(307),

    @Json(name = "308")
    _308(308),

    @Json(name = "400")
    _400(400),

    @Json(name = "401")
    _401(401),

    @Json(name = "401")
    _4012(401),

    @Json(name = "402")
    _402(402),

    @Json(name = "403")
    _403(403),

    @Json(name = "404")
    _404(404),

    @Json(name = "405")
    _405(405),

    @Json(name = "406")
    _406(406),

    @Json(name = "407")
    _407(407),

    @Json(name = "408")
    _408(408),

    @Json(name = "409")
    _409(409),

    @Json(name = "409")
    _4092(409),

    @Json(name = "410")
    _410(410),

    @Json(name = "411")
    _411(411),

    @Json(name = "412")
    _412(412),

    @Json(name = "413")
    _413(413),

    @Json(name = "414")
    _414(414),

    @Json(name = "415")
    _415(415),

    @Json(name = "416")
    _416(416),

    @Json(name = "417")
    _417(417),

    @Json(name = "418")
    _418(418),

    @Json(name = "422")
    _422(422),

    @Json(name = "425")
    _425(425),

    @Json(name = "426")
    _426(426),

    @Json(name = "428")
    _428(428),

    @Json(name = "429")
    _429(429),

    @Json(name = "429")
    _4292(429),

    @Json(name = "431")
    _431(431),

    @Json(name = "451")
    _451(451),

    @Json(name = "500")
    _500(500),

    @Json(name = "500")
    _5002(500),

    @Json(name = "500")
    _5003(500),

    @Json(name = "501")
    _501(501),

    @Json(name = "502")
    _502(502),

    @Json(name = "503")
    _503(503),

    @Json(name = "504")
    _504(504),

    @Json(name = "505")
    _505(505),

    @Json(name = "506")
    _506(506),

    @Json(name = "507")
    _507(507),

    @Json(name = "508")
    _508(508),

    @Json(name = "510")
    _510(510),

    @Json(name = "511")
    _511(511);

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value.toString()

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ResponseStatus) "$data" else null

        /**
         * Returns a valid [ResponseStatus] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ResponseStatus? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

