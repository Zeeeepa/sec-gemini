/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.Message
import org.openapitools.client.models.ModelInfoInput
import org.openapitools.client.models.PublicSessionFile
import org.openapitools.client.models.State
import org.openapitools.client.models.Usage

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Only add the fields necessary to show to users.
 *
 * @param userId The user ID this session belongs to.
 * @param orgId The organization ID this session belongs to.
 * @param model Model configuration used in the session.
 * @param ttl The time to live of the session in seconds.
 * @param name Human readable session name.
 * @param description A brief description to help users remember what the session is about.
 * @param id Session unique ramdom identifier.
 * @param language The iso-code of the session language.
 * @param turns The number of turns in the session.
 * @param createTime The Unix timestamp (in seconds) of when the session was created.
 * @param updateTime The Unix timestamp (in seconds) of when the session was last updated.
 * @param numMessages The number of messages in the session.
 * @param messages The list of messages comprising the session so far.
 * @param usage Session usage statistics.
 * @param canLog Whether the session can be logged or not.
 * @param state The state the session belongs to.
 * @param files The list of files uploaded to the session.
 */


data class PublicSessionInput (

    /* The user ID this session belongs to. */
    @Json(name = "user_id")
    val userId: kotlin.String,

    /* The organization ID this session belongs to. */
    @Json(name = "org_id")
    val orgId: kotlin.String,

    /* Model configuration used in the session. */
    @Json(name = "model")
    val model: ModelInfoInput,

    /* The time to live of the session in seconds. */
    @Json(name = "ttl")
    val ttl: kotlin.Int,

    /* Human readable session name. */
    @Json(name = "name")
    val name: kotlin.String,

    /* A brief description to help users remember what the session is about. */
    @Json(name = "description")
    val description: kotlin.String,

    /* Session unique ramdom identifier. */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* The iso-code of the session language. */
    @Json(name = "language")
    val language: kotlin.String? = "en",

    /* The number of turns in the session. */
    @Json(name = "turns")
    val turns: kotlin.Int? = 0,

    /* The Unix timestamp (in seconds) of when the session was created. */
    @Json(name = "create_time")
    val createTime: kotlin.Int? = null,

    /* The Unix timestamp (in seconds) of when the session was last updated. */
    @Json(name = "update_time")
    val updateTime: kotlin.Int? = null,

    /* The number of messages in the session. */
    @Json(name = "num_messages")
    val numMessages: kotlin.Int? = 0,

    /* The list of messages comprising the session so far. */
    @Json(name = "messages")
    val messages: kotlin.collections.List<Message>? = null,

    /* Session usage statistics. */
    @Json(name = "usage")
    val usage: Usage? = null,

    /* Whether the session can be logged or not. */
    @Json(name = "can_log")
    val canLog: kotlin.Boolean? = true,

    /* The state the session belongs to. */
    @Json(name = "state")
    val state: State? = null,

    /* The list of files uploaded to the session. */
    @Json(name = "files")
    val files: kotlin.collections.List<PublicSessionFile>? = null

) {


}

